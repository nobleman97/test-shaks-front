stages:
  - build
  - deploy
  
variables:
  SERVER_IP: "18.189.194.0"



build_frontend:
  stage: build
  image: 4568910/gitlab_runner

  # rules:
  #   - if: '$CI_COMMIT_BRANCH == "main"'
  script:
    - git checkout main
    - touch .env && echo $FRONTEND_ENV > .env
    - npm i && npm run build
    - npm run start
  before_script:
    - apk update
    - apk add git nodejs npm


deploy:
  stage: deploy
  image: 4568910/gitlab_runner

  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  dependencies:
    - build_frontend
  when: manual

  before_script:
    - apk update update
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh "ubuntu@$SERVER_IP" -p 22 "bash /home/ubuntu/scripts/deploy_frontend.sh"
  

# variables:
#   DOCKER_REGISTRY: "4568910/shakazu-frontend"
#   CI_REGISTRY_USER: "4568910"
#   CI_REGISTRY_PASSWORD: "$DOCKER_PASSWORD"


# build_and_push_frontend_image:
#   stage: build
#   image: docker:stable
#   services:
#     - docker:dind
#   rules:
#     - if: '$CI_COMMIT_BRANCH == "main"'
#   script:
#     - docker build -t $DOCKER_REGISTRY:$CI_PIPELINE_IID .
#     - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD 
#     - docker push $DOCKER_REGISTRY:$CI_PIPELINE_IID
#     - docker tag $DOCKER_REGISTRY:$CI_PIPELINE_IID $DOCKER_REGISTRY:latest # make the most recent latest
#     - docker push $DOCKER_REGISTRY:latest       # push as latest






# apply-job:
#   stage: tf-apply
#   image: 4568910/gitlab_runner
#   before_script:
#     # - echo "Hello, $GITLAB_USER_LOGIN!"
#     - cd terraform 
#   script:
#     - terraform init 
#     - terraform apply --auto-approve
#   needs: 
#     - job: plan-job
#   when: manual



# test-job1:
#   stage: test
#   script:
#     - echo "This job tests something"

# test-job2:
#   stage: test
#   script:
#     - echo "This job tests something, but takes more time than test-job1."
#     - echo "After the echo commands complete, it runs the sleep command for 20 seconds"
#     - echo "which simulates a test that runs 20 seconds longer than test-job1"
#     - sleep 20

# deploy-prod:
#   stage: deploy
#   script:
#     - echo "This job deploys something from the $CI_COMMIT_BRANCH branch."
#   environment: production
